{"version":3,"sources":["components/Navigation.tsx","App.tsx","components/HomePage.tsx","components/TabItem.tsx","components/TabsPage.tsx","components/NotFoundPage.tsx","utils/tabs.ts","index.tsx"],"names":["getLinkClass","isActive","classNames","Navigation","className","to","App","HomePage","TabItem","tab","tabId","useParams","id","title","TabsPage","tabs","tabContent","find","map","content","NotFoundPage","ReactDOM","render","path","element","index","document","getElementById"],"mappings":"kPAGMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC5D,cAAe,CACb,YAAaD,GAFI,EAMRE,EAAa,WACxB,OACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAWJ,EAA3B,kBAGA,cAAC,IAAD,CAASK,GAAG,QAAQD,UAAWJ,EAA/B,wBAOT,ECrBYM,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,ECNNG,EAAW,kBACtB,oBAAIH,UAAU,QAAd,sBADsB,ECQXI,EAA2B,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACjCC,EAAUC,cAAVD,MAER,OACE,oBACE,UAAQ,MACRN,UAAWF,IAAW,CACpB,YAAaQ,IAAUD,EAAIG,KAH/B,SAME,cAAC,IAAD,CAAMP,GAAE,gBAAWI,EAAIG,IAAvB,SAA8BH,EAAII,SAGvC,ECbYC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCL,EAAUC,cAAVD,MACFM,EAAaD,EAAKE,MAAK,qBAAGL,KAAgBF,CAAnB,IAE7B,OACE,qCACE,oBAAIN,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGW,EAAKG,KAAI,SAACT,GAAD,OACR,cAAC,EAAD,CAASA,IAAKA,GADN,QAMd,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,UACa,OAAVY,QAAU,IAAVA,OAAA,EAAAA,EAAYG,UAAW,0BAI/B,EC7BYC,EAAe,kBAC1B,oBAAIhB,UAAU,QAAd,2BAD0B,ECAfW,EAAO,CAClB,CAAEH,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,gBCU1CE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,CAAUT,KAAMA,MACtC,cAAC,IAAD,CAAOQ,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUT,KAAMA,SAEhD,cAAC,IAAD,CAAOQ,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUnB,GAAG,eAI/CqB,SAASC,eAAe,Q","file":"static/js/main.3ec0e1a3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'is-active': isActive,\n  },\n);\n\nexport const Navigation = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n          <NavLink to=\"/tabs\" className={getLinkClass}>\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <>\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tab: Tab;\n};\n\nexport const TabItem: React.FC<Props> = ({ tab }) => {\n  const { tabId } = useParams();\n\n  return (\n    <li\n      data-cy=\"Tab\"\n      className={classNames({\n        'is-active': tabId === tab.id,\n      })}\n    >\n      <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n    </li>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\nimport { TabItem } from './TabItem';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n  const tabContent = tabs.find(({ id }) => id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <TabItem tab={tab} />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent?.content || 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { tabs } from './utils/tabs';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage tabs={tabs} />} />\n          <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}